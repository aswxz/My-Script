# coding:utf-8
"""
Django settings for opsweb project.

Generated by 'django-admin startproject' using Django 1.8.17.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e+jlz$_vp@4^sbtqk5=*@l0tfk&n3fqft!ip3r_!6fo75=l_)l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dashboard',
    'pure_pagination',
    'work_order',
    'auto_tasks',
    'projects',
    'code_release',
    'server',
)

# 自定义用户model
AUTH_USER_MODEL = 'dashboard.UserProfile'


ANONYMOUS_USER_ID = -1  

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
#    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'opsweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'opsweb.context_processors.global_variable',

            ],
        },
    },
]

WSGI_APPLICATION = 'opsweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'yuanxin',
        'USER': 'root',
        'PASSWORD': '123456',
         'HOST': '127.0.0.1'                   
    }
 
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'


USE_I18N = True

USE_L10N = True

USE_TZ = False


# 静态资源访问url及存放路径
STATIC_URL = '/static/'
STATICFILES_DIRS = (                                   
            os.path.join(BASE_DIR,'static/'),  
)

# 用户上传文件
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 邮件设置
EMAIL_HOST = "smtp.mxhichina.com"
EMAIL_PORT = 25
EMAIL_HOST_USER = "sa-notice@yuanxin-inc.com"
EMAIL_HOST_PASSWORD = "Miao13456"
EMAIL_USE_TLS = False
EMAIL_FROM = "sa-notice@yuanxin-inc.com"



# GitLab
GITLAB_HTTP_URI = "http://59.110.12.72:9090/"
GITLAB_TOKEN = "MswMeDbXm7e9PN_BnUjW"

# 分页初使化设置
PAGINATION_SETTINGS = { 
    'PAGE_RANGE_DISPLAYED': 10,            # 每次显示10页
    'MARGIN_PAGES_DISPLAYED': 2,           # 多页码时，首尾只显示两两页，中间省略号
    'SHOW_FIRST_PAGE_WHEN_INVALID': True,  # 如果首页不存在，则显示首页
}   


# 跳转页
JUMP_PAGE  = "public/jump.html"

# 认证跳转页
LOGIN_URL = "/login/"

# 日志功能
LOGGING = {
    "version": 1,
    'disable_existing_loggers': False,
    # 定义几个不同维度的日志对象
    "loggers":{
        # 日常开发中，自己设置输出的日志，方便自定义排错，可以指定多个handler
        "opsweb": {
            "level": "DEBUG",
            "handlers": ["opsweb_file_handle"],
            'propagate': True,
        },
        # django内部的错误输出，例如语法错误，请求错误等
        "django":{
            "level": "DEBUG",
            "handlers": [ "django_handle"],
            'propagate': True,
        },
        # 级别比较重要的错误发邮件
        "report":{
            "level": "ERROR",
            "handlers": [ "mail"],
            'propagate': True,
        }
    },
    # 具体处理日志的模块
    "handlers":{
        # 自定义的日志记录
        "opsweb_file_handle": {
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, "logs", "opsweb.log"),
            "formatter": "opsweb"
        },  
        # django内置模块。内部错误会被记录,排查时候特别实用
        "django_handle":{
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, "logs", "django.log"),
            "formatter": "opsweb"
        },  
         # django 内置handler,日志出现400 500类的请求会被记录
        'django_request_handler': {
                'level':'DEBUG',
                'class':'logging.handlers.RotatingFileHandler',
                'filename': os.path.join(BASE_DIR, "logs",'request.log'),
                'maxBytes': 1024*1024*5,
                'backupCount': 5,
                'formatter':'opsweb',
        },
        # 需要发邮件的报错
        "mail":{
            "class": "logging.handlers.SMTPHandler",
            "level": "ERROR",
            "formatter": "simple",
            "mailhost":("smtp.139.com", 25),
            "fromaddr":"13260071987@139.com",                           # 发件人email
            "toaddrs":["787696331@qq.com"],                             # 收件人email
            "subject" : "devops mail",                                  # 邮件标题
            "credentials" :("13260071987@139.com","yi15093547036")      # 发件人的用户名与密码
        }
    },
    # 日志格式
    'formatters': {
        'opsweb':{
            'format': '[%(asctime)s] [%(process)d] [%(thread)d] [%(filename)16s:%(lineno)4d] [%(levelname)-6s] %(message)s'
        },
        'simple': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        }
    },
}



